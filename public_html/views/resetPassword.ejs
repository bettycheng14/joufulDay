<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - JoyfulDay</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        #passwordStrength {
            height: 5px;
            width: 100%;
            margin-top: 5px;
            border-radius: 3px;
            transition: width 0.3s, background-color 0.3s;
        }
    </style>
</head>

<body>
    <%- include('partials/header') %>

        <!-- Hero Section -->
        <section class="bg-primary text-white text-center py-5">
            <div class="container">
                <h1>Reset Password</h1>
                <p class="lead">Enter your new password below</p>
            </div>
        </section>

        <section class="container d-flex justify-content-center align-items-center py-5">
            <div class="col-md-6">
                <form id="resetPasswordForm" method="POST" action="/reset-password/<%= token %>">
                    <div id="resetAlertContainer"></div> <!-- Alert will appear here -->
                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <input type="password" class="form-control" name="password" id="resetPassword">
                        <div class="invalid-feedback" id="resetPasswordError"></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" name="confirmPassword" id="resetConfirmPassword">
                        <div class="invalid-feedback" id="resetConfirmPasswordError"></div>
                    </div>
                    <button type="submit" class="btn btn-success w-100">Reset Password</button>
                </form>
            </div>
        </section>


        <%- include('partials/footer') %>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>


            <script>
                const validatePasswordStrength = (password) =>
                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/.test(password);

                function setupValidation(input, errorEl, validators = []) {
                    input.addEventListener("input", () => {
                        let error = "";
                        const value = input.value.trim();
                        for (const validator of validators) {
                            const result = validator(value);
                            if (result !== true) {
                                error = result;
                                break;
                            }
                        }
                        if (error) {
                            input.classList.add("is-invalid");
                            input.classList.remove("is-valid");
                            if (errorEl) errorEl.textContent = error;
                        } else {
                            input.classList.remove("is-invalid");
                            input.classList.add("is-valid");
                            if (errorEl) errorEl.textContent = "";
                        }
                    });
                }

                function showFormAlert(container, message, type = "danger") {
                    container.innerHTML = `
    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
      ${message}
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>`;
                }

                const form = document.getElementById("resetPasswordForm");
                const passwordInput = document.getElementById("resetPassword");
                const confirmInput = document.getElementById("resetConfirmPassword");
                const passwordError = document.getElementById("resetPasswordError");
                const confirmError = document.getElementById("resetConfirmPasswordError");
                const alertContainer = document.getElementById("resetAlertContainer");

                // Real-time validation
                setupValidation(passwordInput, passwordError, [
                    v => v ? true : "Password is required.",
                    v => validatePasswordStrength(v) ? true : "Password must include at least 8 chars, uppercase, lowercase & number."
                ]);
                setupValidation(confirmInput, confirmError, [
                    v => v ? true : "Confirm password is required.",
                    v => v === passwordInput.value.trim() ? true : "Passwords do not match."
                ]);
                passwordInput.addEventListener("input", () => confirmInput.dispatchEvent(new Event("input")));

                // Submit
                form.addEventListener("submit", async e => {
                    e.preventDefault();
                    passwordInput.dispatchEvent(new Event("input"));
                    confirmInput.dispatchEvent(new Event("input"));

                    if (!passwordInput.classList.contains("is-invalid") && !confirmInput.classList.contains("is-invalid")) {
                        const btn = form.querySelector("button[type='submit']");
                        btn.disabled = true;
                        btn.innerHTML = `<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Resetting...`;

                        try {
                            const res = await fetch(form.action, {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({
                                    password: passwordInput.value.trim(),
                                    confirmPassword: confirmInput.value.trim()
                                })
                            });

                            const data = await res.json();

                            if (data.success) {
                                showFormAlert(alertContainer, data.message, "success");
                                setTimeout(() => window.location.href = "/login", 2000);
                            } else {
                                showFormAlert(alertContainer, data.message || "Failed to reset password.", "danger");
                                btn.disabled = false;
                                btn.innerHTML = "Reset Password";
                            }
                        } catch (err) {
                            console.error(err);
                            showFormAlert(alertContainer, "Something went wrong.", "danger");
                            btn.disabled = false;
                            btn.innerHTML = "Reset Password";
                        }
                    }
                });
            </script>

</body>

</html>